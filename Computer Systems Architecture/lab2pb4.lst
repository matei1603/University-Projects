     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; 10–a*a + 2*(b-1) – d data types: a,b,c - byte, d - word
    14 00000000 02                          a db 2
    15 00000001 05                          b db 5
    16 00000002 0300                        d dw 3
    17                                      
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; a*a
    22 00000000 A0[00000000]                    mov al, [a]
    23 00000005 F6E0                            mul al; ax = al*al = a*a
    24                                          
    25 00000007 66BB0A00                        mov bx, 10; bx = 10;
    26 0000000B 6629C3                          sub bx, ax; bx = bx-ax = (10-a*a)
    27                                          
    28                                          
    29 0000000E A0[01000000]                    mov al, [b]     
    30 00000013 2C01                            sub al, 1       
    31 00000015 B102                            mov cl, 2       
    32 00000017 F6E1                            mul cl          
    33                                  
    34                                          
    35 00000019 6601C3                          add bx, ax
    36                                  
    37                                          
    38 0000001C 66BA0000                        mov dx, 0        
    39 00000020 66A1[02000000]                  mov ax, [d]      
    40                                  
    41                                          
    42 00000026 6601C3                          add bx, ax
    43                                          
    44                                          
    45                                          
    46                                          ; exit(0)
    47 00000029 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 0000002B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
