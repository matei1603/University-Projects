     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                   
    14 00000000 02                          a db 2
    15 00000001 0500                        b dw 5
    16 00000003 01                          c db 1
    17 00000004 02000000                    d dd 2
    18                                      
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 66A1[01000000]              mov ax, word[b]
    24 00000006 660FBE1D[03000000]          movsx bx,byte[c]
    25 0000000E 6629D8                      sub ax,bx
    26 00000011 6699                        cwd
    27 00000013 6652                        push dx
    28 00000015 6650                        push ax
    29 00000017 58                          pop eax
    30 00000018 8B15[04000000]              mov edx, dword[d]
    31 0000001E F7EA                        imul edx
    32 00000020 89D1                        mov ecx,edx
    33 00000022 89C3                        mov ebx,eax
    34 00000024 0FBE05[00000000]            movsx eax, byte[a]
    35 0000002B 99                          cdq
    36 0000002C 01D8                        add eax,ebx
    37 0000002E 11CA                        adc edx,ecx
    38                                          ; exit(0)
    39 00000030 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 00000032 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
